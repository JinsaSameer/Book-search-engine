[{"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\index.js":"1","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\App.js":"2","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\pages\\SearchBooks.js":"3","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\pages\\SavedBooks.js":"4","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\components\\Navbar.js":"5","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\components\\SignupForm.js":"6","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\components\\LoginForm.js":"7","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\auth.js":"8","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\API.js":"9","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\queries.js":"10","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\mutations.js":"11","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\localStorage.js":"12"},{"size":295,"mtime":1662769144883,"results":"13","hashOfConfig":"14"},{"size":1756,"mtime":1661383713144,"results":"15","hashOfConfig":"14"},{"size":5403,"mtime":1662770534806,"results":"16","hashOfConfig":"14"},{"size":3446,"mtime":1662769316143,"results":"17","hashOfConfig":"14"},{"size":2601,"mtime":1662753377685,"results":"18","hashOfConfig":"14"},{"size":3378,"mtime":1662753379689,"results":"19","hashOfConfig":"14"},{"size":2709,"mtime":1662753374931,"results":"20","hashOfConfig":"14"},{"size":1283,"mtime":1660594708204,"results":"21","hashOfConfig":"14"},{"size":1449,"mtime":1660594708203,"results":"22","hashOfConfig":"14"},{"size":282,"mtime":1661390462124,"results":"23","hashOfConfig":"14"},{"size":1439,"mtime":1662753385110,"results":"24","hashOfConfig":"14"},{"size":823,"mtime":1660594708205,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1q1yrzp",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":3,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\index.js",["54","55"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';;\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n",["56","57"],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\App.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\pages\\SearchBooks.js",["58","59"],"import React, { useState, useEffect } from 'react';\r\n//import { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Jumbotron from '../node_modules/react-bootstrap/Jumbotron';\r\nimport Container from '../node_modules/react-bootstrap/Container';\r\nimport Col from '../node_modules/react-bootstrap/Col';\r\nimport Form from '../node_modules/react-bootstrap/Form';\r\nimport Button from '../node_modules/react-bootstrap/Button';\r\nimport Card from '../node_modules/react-bootstrap/Card';\r\nimport CardColumns from '../node_modules/react-bootstrap/CardColumns';\r\n\r\nimport Auth from '../utils/auth';\r\nimport { saveBook, searchGoogleBooks } from '../utils/API';\r\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\r\nimport { useMutation } from '@apollo/client';\r\nimport { SAVE_BOOK } from '../utils/mutations';\r\nconst SearchBooks = () => {\r\n  // create state for holding returned google api data\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved bookId values\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\r\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBookIds(savedBookIds);\r\n  });\r\n\r\n  // create method to search for books and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchGoogleBooks(searchInput);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || ['No author to display'],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a book to our database\r\n  const handleSaveBook = async (bookId) => {\r\n    // find the book in `searchedBooks` state by the matching id\r\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBook(bookToSave, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      // if book successfully saves to user's account, save book id to state\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a book'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : 'Search for a book to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? (\r\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBook(book.bookId)}>\r\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\pages\\SavedBooks.js",["60","61","62","63","64","65","66"],"import React, { useState } from 'react';\r\n//import { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport  Button from 'react-bootstrap/Button';\r\nimport  Card from 'react-bootstrap/Card';\r\n\r\n\r\n//import { getMe, deleteBook } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport { removeBookId } from '../utils/localStorage';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ME } from '../utils/queries';\r\nimport { REMOVE_BOOK } from '../utils/mutations';\r\n\r\nconst SavedBooks = () => {\r\n  const [userData, setUserData] = useState({});\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  const userDataLength = Object.keys(userData).length;\r\n\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const response = await getMe(token);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        const user = await response.json();\r\n        setUserData(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    getUserData();\r\n  }, [userDataLength]);\r\n\r\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteBook(bookId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      // upon success, remove book's id from localStorage\r\n      removeBookId(bookId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\r\n            : 'You have no saved books!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;\r\n","C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\components\\Navbar.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\components\\SignupForm.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\components\\LoginForm.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\auth.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\API.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\queries.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\mutations.js",[],"C:\\BootCamp\\Jinsa-Repos\\Book-search-engine\\Develop\\client\\src\\utils\\localStorage.js",[],{"ruleId":"67","severity":2,"message":"68","line":4,"column":1,"nodeType":"69","endLine":4,"endColumn":22,"fix":"70"},{"ruleId":"67","severity":2,"message":"68","line":5,"column":1,"nodeType":"69","endLine":5,"endColumn":25,"fix":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":24,"column":22,"nodeType":"78","messageId":"79","endLine":24,"endColumn":27},{"ruleId":"76","severity":1,"message":"81","line":13,"column":10,"nodeType":"78","messageId":"79","endLine":13,"endColumn":18},{"ruleId":"76","severity":1,"message":"82","line":13,"column":20,"nodeType":"78","messageId":"79","endLine":13,"endColumn":31},{"ruleId":"76","severity":1,"message":"83","line":14,"column":10,"nodeType":"78","messageId":"79","endLine":14,"endColumn":16},{"ruleId":"76","severity":1,"message":"84","line":15,"column":10,"nodeType":"78","messageId":"79","endLine":15,"endColumn":21},{"ruleId":"85","severity":2,"message":"86","line":23,"column":3,"nodeType":"78","messageId":"87","endLine":23,"endColumn":12},{"ruleId":"85","severity":2,"message":"88","line":32,"column":32,"nodeType":"78","messageId":"87","endLine":32,"endColumn":37},{"ruleId":"85","severity":2,"message":"89","line":57,"column":30,"nodeType":"78","messageId":"87","endLine":57,"endColumn":40},"import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"90","text":"91"},{"range":"92","text":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'saveBook' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'GET_ME' is defined but never used.","'REMOVE_BOOK' is defined but never used.","no-undef","'useEffect' is not defined.","undef","'getMe' is not defined.","'deleteBook' is not defined.",[149,149],"",[0,175],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';;","no-global-assign","no-unsafe-negation"]